{"version":3,"sources":["assets/logo.png","utils.js","core.js","components/NavigationBar.js","views/Signup.js","views/Login.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiPost","endpoint","args","param","method","url","headers","header","data","body","axios","apiGet","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","createCookie","value","expiration","expiry","Date","getTime","String","deleteCookie","Pulse","use","React","token","username","NavigationBar","props","core","className","to","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","this","logoutHandler","something","Component","Login","state","un","pw","fn","ln","handleUsernameChange","bind","handlePasswordChange","handleUFirstNameChange","handleLasttNameChange","handleCityChange","signupHandler","event","setState","target","process","password","first_name","last_name","city","signupResult","alert","description","response","onChange","loginHandler","loginResult","Home","search","news","weather","handleSearchChange","updateWeather","updateNews","newsResult","newItem","itemHeader","key","push","entries","index","jsxval","city_info","current","wind","speed","main","humidity","parseInt","temp","console","log","urlToImage","href","title","author","path","Signup","Boolean","window","location","hostname","match","require","config","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b56fba1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b9295bd.png\";","import axios from 'axios';\n\n\nexport const apiPost = (endpoint, args) => {\n  var param = {\n    method: \"POST\",\n    url: endpoint,\n    headers: args.header,\n    data: args.body\n  };\n\n  return axios(param);\n}\n\nexport const apiGet = (endpoint, args) => {\n  var param = {\n    method: \"GET\",\n    url: endpoint,\n    headers: args.header,\n    data: args.body\n  };\n\n  return axios(param);\n}\n\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        // eslint-disable-next-line\n        while (c.charAt(0) == \" \") {\n            c = c.substring(1);\n        }\n        // eslint-disable-next-line\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return null;\n};\n\nexport const createCookie = (cname, value, expiration) => {\n    var expiry = new Date((new Date()).getTime() + expiration);\n    document.cookie = cname + \"=\" + value + \"; Path=/; Expires=\" + String(expiry) + \";\";\n};\n\nexport const deleteCookie = (cname) => {\n    document.cookie = cname + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n};\n\n","import Pulse from 'pulse-framework';\nimport React from 'react';\n\nPulse.use(React);\n\nexport default new Pulse({\n  data: {\n    token: null,\n    username: null\n  }\n});","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport logo from '../assets/logo.png'\n\nimport { getCookie, deleteCookie } from '../utils';\n\nimport core from '../core';\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super();\n        if (getCookie(\"tv_token\") && getCookie(\"tv_username\")) {\n            core.token = getCookie(\"tv_token\");\n            core.username = getCookie(\"tv_username\");\n        }\n    }\n    logoutHandler(){\n\n        deleteCookie(\"tv_token\");\n        deleteCookie(\"tv_username\");\n\n        core.token = null;\n        core.username = null;\n    }\n    render() {\n        if (!core.token)\n            return (\n                <div>\n                    <nav className=\"navbar navbar-expand-lg  navbar-light\">\n                        <div className=\"container\">\n                            <Link to=\"/\" className=\"navbar-brand\">\n                                <img src={logo} alt=\"Logo\" />\n                                {/* Travel Verse */}\n                            </Link>\n\n                            <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbars\"\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\" className=\"navbar-toggler\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n\n                            <div id=\"navbarContent\" className=\"collapse navbar-collapse\">\n                                <ul className=\"nav navbar-nav mr-auto\">\n                                    {/* <li className=\"nav-item\"><Link to=\"/signup\" className=\"nav-link\">signup</Link></li> */}\n                                </ul>\n\n                                <ul className=\"nav navbar-nav navbar-right\">\n                                    <li className=\"nav-item\"><Link to=\"/login\" className=\"nav-link\">LOGIN</Link></li>\n                                    <li className=\"nav-item\"><Link to=\"/signup\" className=\"nav-link\">SIGNUP</Link></li>\n                                </ul>\n\n                            </div>\n                        </div>\n                    </nav>\n                    {core.something}\n                </div>\n            )\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg  navbar-light\">\n                    <div className=\"container\">\n                        <Link to=\"/\" className=\"navbar-brand\">\n                            <img src={logo} alt=\"Logo\" />\n                            {/* Travel Verse */}\n                        </Link>\n\n                        <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbars\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\" className=\"navbar-toggler\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div id=\"navbarContent\" className=\"collapse navbar-collapse\">\n                            <ul className=\"nav navbar-nav mr-auto\">\n                                {/* <li className=\"nav-item\"><Link to=\"/signup\" className=\"nav-link\">signup</Link></li> */}\n                            </ul>\n\n                            <ul className=\"nav navbar-nav navbar-right\">\n                                {/* <li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\">HOME</Link></li> */}\n                                <li className=\"nav-item\"><Link to=\"/login\" onClick={this.logoutHandler} className=\"nav-link\">LOGOUT({core.username})</Link></li>\n                            </ul>\n\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default NavigationBar;","import React from 'react';\n// import logo from '../assets/logo.png';\n\nimport { apiPost } from '../utils';\n\nimport { Redirect } from 'react-router-dom';\n\nimport core from '../core';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            un: '',\n            pw: '',\n            fn: '',\n            ln: '',\n            c: ''\n        };\n\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleUFirstNameChange = this.handleUFirstNameChange.bind(this);\n        this.handleLasttNameChange = this.handleLasttNameChange.bind(this);\n        this.handleCityChange = this.handleCityChange.bind(this);\n        this.signupHandler = this.signupHandler.bind(this);\n    }\n\n    handleUsernameChange(event) {\n        this.setState({\n            un: event.target.value\n        });\n    }\n\n    handlePasswordChange(event) {\n        this.setState({\n            pw: event.target.value\n        });\n    }\n\n\n    handleUFirstNameChange(event) {\n        this.setState({\n            fn: event.target.value\n        });\n    }\n\n    handleLasttNameChange(event) {\n        this.setState({\n            ln: event.target.value\n        });\n    }\n\n    handleCityChange(event) {\n        this.setState({\n            c: event.target.value\n        });\n    }\n\n    async signupHandler() {\n        core.something = \"123\";\n        try {\n            // console.log(this.state.un,this.state.pw,this.state.fn,this.state.ln,this.state.c)\n            const signupResult = await apiPost(process.env.REACT_APP_API_URL + '/user', {\n                body: {\n                    username: this.state.un,\n                    password: this.state.pw,\n                    first_name: this.state.fn,\n                    last_name: this.state.ln,\n                    city: this.state.c\n                }\n            });\n\n            alert(signupResult.data.description);\n\n            this.setState({\n                un: '',\n                pw: '',\n                fn: '',\n                ln: '',\n                c: ''\n            });\n        } catch (error) {\n            alert(error.response.data.description)\n        }\n    }\n\n    render() {\n        if(core.token)\n            return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container container-signup\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 offset-md-2\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card border-0\">\n                                <div className=\"card-body\">\n                                    {/* <div className=\"form-row text-center\">\n                                        <img src={logo} alt=\"Logo\" className=\"mx-auto logo\"/>\n                                    </div> */}\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>Username:</label>\n                                            <input type=\"text\" className=\"form-control\" value={this.state.un} onChange={this.handleUsernameChange} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>Password:</label>\n                                            <input type=\"password\" className=\"form-control\" value={this.state.pw} onChange={this.handlePasswordChange} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>First Name:</label>\n                                            <input type=\"text\" className=\"form-control\" value={this.state.fn} onChange={this.handleUFirstNameChange} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>Last Name:</label>\n                                            <input type=\"text\" className=\"form-control\" value={this.state.ln} onChange={this.handleLasttNameChange} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>City:</label>\n                                            <input type=\"text\" className=\"form-control\" value={this.state.c} onChange={this.handleCityChange} />\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block\" onClick={this.signupHandler}>REGISTER</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Login;","import React from 'react';\n// import logo from '../assets/logo.png';\n\nimport { apiPost, createCookie } from '../utils';\nimport { Redirect } from 'react-router-dom';\n\nimport core from '../core';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {un: '', pw: ''};\n\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.loginHandler = this.loginHandler.bind(this);\n    }\n\n    handleUsernameChange(event) {\n        this.setState({\n            un: event.target.value\n        });\n    }\n\n    handlePasswordChange(event) {\n        this.setState({\n            pw: event.target.value\n        });\n    }\n\n    async loginHandler() {\n        try {            \n            const loginResult = await apiPost(process.env.REACT_APP_API_URL + '/user/login', {\n                body: {\n                    username: this.state.un,\n                    password: this.state.pw\n                }\n            });\n            const token = loginResult.data.body.token;\n            const expiration = loginResult.data.body.expiration;\n            createCookie(\"tv_token\", token, expiration)\n            createCookie(\"tv_username\", this.state.un, expiration)\n\n            core.token = token;\n            core.username = this.state.un;\n\n            alert(loginResult.data.description);\n            \n        } catch (error) {\n            alert(error.response.data.description)\n        }\n    }\n\n    render() {\n        if(core.token)\n            return <Redirect to=\"/\" />\n        \n        return (\n            <div className=\"container container-login\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 offset-md-2\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card border-0\">\n                                <div className=\"card-body\">\n                                    {/* <div className=\"form-row text-center\">\n                                        <img src={logo} alt=\"Logo\" className=\"mx-auto logo\"/>\n                                    </div> */}\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>Username:</label>\n                                            <input type=\"text\" className=\"form-control\" value={this.state.un} onChange={this.handleUsernameChange}  />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <label>Password:</label>\n                                            <input type=\"password\" className=\"form-control\" value={this.state.pw} onChange={this.handlePasswordChange} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-row\">\n                                        <div className=\"form-group col-md-12\">\n                                            <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block\" onClick={this.loginHandler}>LOGIN</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Login;","import React from 'react';\n// import logo from '../assets/logo.png';\n\nimport { apiGet } from '../utils';\nimport { Redirect } from 'react-router-dom';\n\nimport core from '../core';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: '',\n            news: [],\n            weather: []\n        };\n\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.updateWeather = this.updateWeather.bind(this);\n        this.updateNews = this.updateNews.bind(this);\n    }\n\n    handleSearchChange(event) {\n        this.setState({\n            search: event.target.value\n        });\n    }\n\n    async updateWeather() {\n        try {\n            const newsResult = await apiGet(process.env.REACT_APP_API_URL + '/weather/' + this.state.search, {});\n            \n            var newItem = [];\n            var itemHeader = (\n                <div className=\"col-12\" key={0}>\n                    <h4>WEATHER:</h4>\n                </div>\n            );\n            newItem.push(itemHeader)\n            for (const [index, value] of newsResult.data.body.entries()){\n                // console.log(value);\n                var jsxval = (\n                        <div className=\"col-12\" key={index+1}>\n                            <div className=\"card card-weather\">\n                                <div className=\"card-body\">\n                                    <h5>{value.city_info.name}</h5>\n                                    <b>Wind Speed:</b> {value.current.wind.speed} <br/>\n                                    <b>Humidity:</b> {value.current.main.humidity}% <br/>\n                                    <b>Current Temperature:</b> {parseInt((value.current.main.temp - 273.15) * 1.8 + 32)} F° <br/>\n\n                                </div>                                \n                            </div>\n                        </div>\n\n                )\n                newItem.push(jsxval)\n            }\n\n            // var x = newsResult.data.body;\n\n            this.setState({\n                weather: newItem\n            })\n\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    async updateNews() {\n        try {\n            const newsResult = await apiGet(process.env.REACT_APP_API_URL + '/news/' + this.state.search, {});\n            \n            var newItem = [];\n            var itemHeader = (\n                <div className=\"col-12\" key={0}>\n                    <h4>NEWS:</h4>\n                </div>\n            );\n            newItem.push(itemHeader)\n            for (const [index, value] of newsResult.data.body.entries()) {\n                var jsxval = (\n\n                    <div className=\"col-4\" key={index + 1}>\n                        <div className=\"card\">\n                            <img className=\"card-img-top\" alt=\"\" src={value.urlToImage} />\n                            <div className=\"card-body\">\n                                {/* eslint-disable-next-line */}\n                                <a href={value.url} target=\"_blank\"> {value.title} </a> <br />\n                                <b>Description:</b> {value.description} <br />\n                                <b>Author:</b> {value.author} <br />\n\n                            </div>\n                        </div>\n                    </div>\n\n                )\n                newItem.push(jsxval)\n            }\n\n            // var x = newsResult.data.body;\n\n            this.setState({\n                news: newItem\n            })\n\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    // updateAll(){\n    //     this.updateWeather();\n    //     this.updateNews();\n    // }\n\n    render() {\n        if (!core.token)\n            return <Redirect to=\"/login\" />\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card border-0\">\n                            <div className=\"card-body\">\n\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-sm-10\">\n                                        <label>City Name</label>\n                                        <input type=\"text\" className=\"form-control\" value={this.state.search} onChange={this.handleSearchChange} />\n                                    </div>\n                                    <div className=\"form-group col-sm-2\">\n                                        <label>Search</label>\n                                        <button type=\"button\" className=\"form-control\" onClick={() => { this.updateWeather(); this.updateNews() }}>Go</button>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    {this.state.weather}\n                                </div>\n                                <div className=\"row\">\n                                    {this.state.news}\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Home;","import React from 'react';\nimport Pulse from 'pulse-framework';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nimport NavigationBar from './components/NavigationBar';\nimport Signup from './views/Signup';\nimport Login from './views/Login';\nimport Home from './views/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavigationBar />\n\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup/>\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Pulse.React(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* Bootstrap, jQuery & Popper.JS */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}